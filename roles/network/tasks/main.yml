---
- name: Set the hostname with domain
  ansible.builtin.command: "hostnamectl set-hostname {{ ansible_hostname }}.{{ cluster_domain }}"

- name: Echo the hostname to the kernel
  ansible.builtin.command: "echo {{ ansible_hostname }}.{{ cluster_domain }}"

- name: start systemd-resolved
  systemd:
    name: systemd-resolved
    state: started

- name: link stub resolver
  file:
    src: /run/systemd/resolve/stub-resolv.conf
    dest: /etc/resolv.conf
    state: link
    force: yes

- name: set nameservers on active connections
  community.general.nmcli:
    conn_name: "{{ ansible_default_ipv4['interface'] }}"
    type: "{{ host_conn_type | default('ethernet') }}"
    method6: disabled
    dns4: "{{ dns_ips }}"
    dns4_search: "{{ cluster_domain }}"
    state: present
  when: ansible_hostname != 'samarkand'
  vars:
    dns_ips: "{{ lan_dns | intersect(external_dns) }}"

- name: set nameservers on active connections samarkand
  community.general.nmcli:
    conn_name: "wlp3s0"
    type: "{{ host_conn_type | default('ethernet') }}"
    method6: disabled
    dns4: "{{ dns_ips }}"
    dns4_search: "{{ cluster_domain }}"
    state: present
  vars:
    dns_ips: "{{ lan_dns | intersect(external_dns) }}"

- name: send the resolved config
  template:
    src: resolved.conf.j2
    dest: /etc/systemd/resolved.conf
    owner: root
    group: root
    mode: 0644

- name: reload nm conxns
  shell: "nmcli c reload ansible_default_ipv4['interface'] }}"

- name: start systemd-resolved
  systemd:
    name: systemd-resolved
    state: restarted
    daemon_reload: yes
    enabled: yes

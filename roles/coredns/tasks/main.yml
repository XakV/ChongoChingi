---
# name: search for the image
# ansible.builtin.command: podman search coredns
#
# name: pull the image
# containers.podman.podman_image:
#   name: docker.io/coredns/coredns

- name: make a coredns volume
  containers.podman.podman_volume:
    state: present
    name: coredns_vol
  register: vol_path

- name: copy zone file
  ansible.builtin.template:
    src: "db.{{ dns_file }}.j2"
    dest: "{{ vol_path.volume['Mountpoint'] }}/db.{{ dns_file }}"
    force: yes
    owner: root
    group: root
    mode: 0644 
  vars:
    dns_file: "{{ nameservers[inventory_hostname]['domain'] }}"

- name: create the coredns container
  containers.podman.podman_container:
    name: coredns
    image: docker.io/coredns/coredns
    state: started
    volume:
      - coredns_vol:/srv/CoreDNS
    recreate: yes
    network: bridge
    expose: 53/udp
    ports: "{{ ansible_default_ipv4.address }}:53:53/udp"
    generate_systemd:
      path: /usr/lib/systemd/system
      restart_policy: always
      time: 120
    workdir: /srv/CoreDNS
  register: dns_container

- name: enable and start the dns service
  ansible.builtin.systemd:
    name: "{{ dns_container.podman_systemd.keys() | first }}"
    state: started
    daemon_reload: true
    enabled: true

- name: open ports for dns
  ansible.posix.firewalld:
    port: 53/udp
    permanent: yes
    state: enabled

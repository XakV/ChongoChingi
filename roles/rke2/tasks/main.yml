---
- name: NetworkManager shouldnt manage k8s ifaces
  ansible.builtin.copy:
    src: rke2-cni.conf
    dest: /etc/NetworkManager/conf.d/rke2-cni.conf
    owner: root
    group: root

- name: kernel modules for cri-o
  ansible.builtin.copy:
    src: crio.conf
    dest: /etc/modules-load.d/crio.conf
    owner: root
    group: root

- name: issue modprobe commands
  shell: "modprobe {{ item }}"
  loop:
    - 'br_netfilter'
    - 'overlay'

- name: set sysctls
  sysctl:
    name: "net.ipv4.ip_forward"
    value: "1"
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    sysctl_set: true

- name: restart NetworkManager
  ansible.builtin.systemd:
    name: NetworkManager.service
    state: restarted
    daemon-reload: yes
    enabled: yes

- name: firewalld open ports for agent nodes
  ansible.posix.firewalld:
    port: "{{ item | string }}"
    state: enabled
    permanent: yes
  loop: "{{ rke2_agent_ports }}"
  when: rke2_agent

- name: firewalld open ports for server
  ansible.posix.firewalld:
    port: "{{ item }}"
    state: enabled
    permanent: yes
  loop: "{{ rke2_server_ports }}"
  when: rke2_server

- name: reload and restart firewalld
  ansible.builtin.systemd:
    name: firewalld
    daemon-reload: yes
    state: restarted
    enabled: yes
      
- name: make rancher config dir
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    owner: root
    group: root

- name: write rancher server config
  ansible.builtin.copy:
    src: server_config.yaml
    dest: /etc/rancher/rke2/config.yaml
  when: rke2_server

- name: run server install command
  shell: 'curl -sfL https://get.rke2.io | sh -'
  when: rke2_server

- name: start enable rke2
  ansible.builtin.systemd:
    name: rke2-server.service
    state: started
    enabled: yes
    daemon-reload: yes
---
- name: Include tasks for system type
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/{{ system_type }}.yml"
  vars:
    system_type: |-
      {{ lookup('ansible.builtin.file', '/proc/cmdline') is search('ostree') | ternary('ostree', 'rpm_only') }}

- name: make vim right
  ansible.builtin.shell: |
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  become: yes
  become_user: zach

- name: start up user services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    daemon-reload: yes
    state: restarted
    scope: user
  become_user: zach
  loop:
    - syncthing
    - podman.socket
    - podman-auto-update.timer

- name: start up system services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    daemon-reload: yes
    state: restarted
  loop:
    - podman.socket
    - podman-auto-update.timer

- name: aliases set up in bash_profile
  blockinfile:
    path: /home/zach/.bash_profile
    owner: zach
    group: zach 
    mode: 0640
    block: |
      {{ alias_block }}

      # name: copy dotfiles
      # ansible.builtin.copy:
      #   src: "{{ item }}"
      #   dest: "/home/zach/.{{ item }}"
      #   owner: zach
      #   group: zach
      #   mode: 0640
      # loop: "{{ home_dotfiles }}"
      #
      # name: copy ssh dir
      # ansible.builtin.copy:
      #   src: ssh
      #   dest: /home/zach/.ssh
      #   owner: zach
      #   group: zach
      #   mode: 0640
      #
      # name: copy home dot_dirs
      # ansible.builtin.copy:
      #   src: "{{ item }}"
      #   dest: "/home/zach/.{{ item }}"
      #   owner: zach
      #   group: zach
      #   mode: 0640
      # loop: "{{ home_dotdirs }}"

- name: install pipx
  ansible.builtin.pip:
    name: pipx
    state: present
    extra_args: --user
  become: yes
  become_user: zach

- name: create vim tmp directory
  file:
    path: /home/zach/.vim/tmp
    state: directory
    owner: zach
    group: zach
    mode: 0750

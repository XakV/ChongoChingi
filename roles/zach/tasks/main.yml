---
- name: set up vscode ms keys
  ansible.builtin.rpm_key:
    state: present
    key: https://packages.microsoft.com/keys/microsoft.asc

- name: set up vscode repo
  ansible.builtin.yum_repository:
    name: vscode
    description: ms vscode
    file: vscode.repo
    baseurl: https://packages.microsoft.com/yumrepos/vscode
    enabled: yes
    gpgcheck: yes
    gpgkey: https://packages.microsoft.com/keys/microsoft.asc

- name: remove the nano default
  ansible.builtin.dnf:
    name: nano-default-editor
    state: absent

- name: set up modular rpms
  command: "dnf module enable {{ modular_rpms | quote }} -y"

- name: install modular rpms
  ansible.builtin.dnf:
    name: "{{ modular_rpms.split(':')[0] }}"
    state: present

- name: install a few normal things
  ansible.builtin.dnf:
    name: "{{ zachs_rpms }}"
    state: present

- name: install wezterm nightly
  ansible.builtin.dnf:
    name: https://github.com/wez/wezterm/releases/download/nightly/wezterm-nightly-fedora36.rpm
    state: present
    disable_gpg_check: yes
  when: ansible_distribution_major_version == '36'

- name: make vim right
  ansible.builtin.shell: |
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  become: yes
  become_user: zach

- name: start up user services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    daemon-reload: yes
    state: restarted
    scope: user
  become_user: zach
  loop:
    - syncthing
    - podman.socket
    - podman-auto-update.timer

- name: Add the flathub flatpak repository remote to the user installation
  flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user
  become_user: zach

- name: install the flattened paks
  flatpak:
    name: "{{ item }}"
    state: present
    method: user
  become_user: zach
  loop: "{{ flatpaks }}"

- name: install the gamery flattened paks
  flatpak:
    name: "{{ item }}"
    state: present
    method: user
  become_user: zach
  loop: "{{ gaming_flpks }}"
  when: ansible_nodename is search('megalonyx')

- name: copy dotfiles
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/zach/.{{ item }}"
    owner: zach
    group: zach
    mode: 0640
  loop: "{{ home_dotfiles }}"

- name: copy ssh dir
  ansible.builtin.copy:
    src: ssh
    dest: /home/zach/.ssh
    owner: zach
    group: zach
    mode: 0640

- name: copy home dot_dirs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/zach/.{{ item }}"
    owner: zach
    group: zach
    mode: 0640
  loop: "{{ home_dotdirs }}"

- name: set up poetry
  ansible.builtin.shell: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
  args:
    creates: "{{ ansible_user_dir }}/.poetry/bin/poetry"
  become: yes
  become_user: zach

- name: install pipx
  ansible.builtin.pip:
    name: pipx
    state: present
    extra_args: --user
  become: yes
  become_user: zach
